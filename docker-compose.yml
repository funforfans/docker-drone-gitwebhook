version: '3'
services:
  mygogs:
    container_name: "gogs"
    image: gogs/gogs
    ports:
      - "10080:3000"
    volumes:
      - "${HOME}/gogs:/data"
    depends_on:
      - mysql_db
    links:
      - mysql_db
  mysql_db:
    image: "mysql"
    container_name: "mysql8.0"
    restart: always
    #command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: "123456"
    volumes:
      - "${HOME}/mysql/data:/var/lib/mysql"
    ports:
      - "3306:3306"
    security_opt:
      - seccomp:unconfined
  drone-server:
    image: drone/drone
    container_name: drone-server
    ports:
      - 8000:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/drone/:/var/lib/drone
    environment:
      - DRONE_OPEN=true
      - DRONE_SERVER_HOST=172.16.4.94:8000
      - DRONE_DEBUG=true
      - DRONE_GIT_ALWAYS_AUTH=false
      - DRONE_GOGS=true
      - DRONE_GOGS_SKIP_VERIFY=false
      - DRONE_GOGS_SERVER=http://172.16.4.94:10080
      - DRONE_PROVIDER=gogs
      - DRONE_SERVER_PROTO=http
      - DRONE_RPC_SECRET=7b4eb5caee376cf81a2fcf7181e66175
      - DRONE_USER_CREATE=username:xuyiwen,admin:true
      - DRONE_DATABASE_DATASOURCE=root:123456@tcp(mysql_db:3306)/drone?parseTime=true   #mysql配置，要与上边mysql容器中的配置一致
      - DRONE_DATABASE_DRIVER=mysql
      - TZ=Asia/Shanghai
    restart: always

  drone-agent:
    image: drone/agent
    container_name: drone-agent
    depends_on:
      - drone-server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DRONE_RPC_SERVER=http://172.16.4.94:9000
      - DRONE_RPC_SECRET=7b4eb5caee376cf81a2fcf7181e66175
      - DRONE_RUNNER_CAPACITY=2
      - DRONE_DEBUG=true
      - TZ=Asia/Shanghai
    restart: always
